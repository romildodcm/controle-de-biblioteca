package servlets;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import models.UserType;
import repository.BookRepository;
import repository.IBookRepository;

@WebServlet("/books/delete")
public class BookDeleteServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        IBookRepository repository = new BookRepository();
        req.setCharacterEncoding("utf-8");
		
		String errorMessage = "";
		String message = "";
		
		HttpSession session = req.getSession(false);
        
        try {
        	Integer type = (Integer) session.getAttribute("type");
            Boolean login = (Boolean) session.getAttribute("login");
            
            if (type == UserType.ADMIN.toInteger() && login == true) {
            	try {
            		Integer id = Integer.valueOf(req.getParameter("id"));
            		repository.deleteById(id);
            		
                	message = "Usuário excluído!";
            	} catch (Exception e){
            		System.out.println(e.getMessage());
            		errorMessage = "erro ao excluir usuário";
            	}
            	
            	req.setAttribute("errorMessage", errorMessage);
            	req.setAttribute("message", message);
            	RequestDispatcher dispatcher = req.getRequestDispatcher("/books");
            	dispatcher.forward(req, resp);
            }
            else {
            	throw new Exception("Ops! Usuário sem permissão.");
            }
        } catch (Exception e){
        	System.out.println(e.getMessage());
        	errorMessage = e.getMessage();
        }
        
        req.setAttribute("errorMessage", errorMessage);
    	RequestDispatcher dispatcher = req.getRequestDispatcher("../blib.jsp");
        dispatcher.forward(req, resp);
        
        /// delete
        
        
        
		
	}

}
