package servlets;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import models.Tools;
import models.User;
import repository.IUserRepository;
import repository.UserRepository;


@WebServlet("/login")
public class LoginServlet extends HttpServlet {
	private static final long serialVersionUID = 11L;
	IUserRepository repository = new UserRepository();

	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        req.setCharacterEncoding("utf-8");

        HttpSession session = req.getSession();
        
        String username = req.getParameter("field-user");
        String password = req.getParameter("field-password");
        
        if(session.isNew() && Tools.isValidUsername(username) && Tools.isValidPassword(password)) {
        	try {
        		// todo login
        		
        		if() {
                    User user = repository.find(username);

                    if(user != null && user.getPassword().equals(password)) {
                        return true;
                    }
                }
        		
        		
        	} catch (Exception error) {
        		System.out.println(error.getMessage());
        	}
        } else {
        	session.invalidate();
        }
        
        // Something different of ok login
        String path = req.getContextPath();
    	RequestDispatcher dispatcher = req.getRequestDispatcher(path+"/login.jsp");
        dispatcher.forward(req, resp);
        
        

		
        User user = new User();

		if(isValidLogin(username, password)) {
            user = repository.find(username);

            // set attributes name, username, type, login (bool)
            session.setAttribute("name", user.getName());
            session.setAttribute("username", user.getUsername());
            session.setAttribute("type", user.getType().toInteger());
            session.setAttribute("login", true);
            
            String path = req.getContextPath();
			resp.sendRedirect(path+"/books");
        } else {
            session.setAttribute("login", false);
            req.setAttribute("errorMessage", "usuário ou senha inválidos");
            

            RequestDispatcher dispatcher = req.getRequestDispatcher("/login.jsp");
            dispatcher.forward(req, resp);
        }
	}

    public boolean isValidLogin(String username, String password) {
        

        return false;
    }
}
