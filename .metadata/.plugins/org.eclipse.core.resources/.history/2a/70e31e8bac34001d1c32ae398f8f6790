package servlets;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import models.Tools;
import models.User;
import models.UserType;
import repository.IUserRepository;
import repository.UserRepository;

@WebServlet("/users/register")
public class UserRegisterServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.setCharacterEncoding("utf-8");
        String errorMessage = "";
        //String path = req.getContextPath();
        
        HttpSession session = req.getSession(false);
        
        try {
        	Integer type = (Integer) session.getAttribute("type");
            Boolean login = (Boolean) session.getAttribute("login");
            
        	if (type == UserType.ADMIN.toInteger() && login == true) {
        		IUserRepository repository = new UserRepository();
        		User user = null;
        		
        		System.out.println("Log: fez login");
        		try {
        			
        			// validações
        			// todos os campos estão preenchidos?
        			if (Tools.isStringNullOrEmpty(req.getParameter("field-name"))
        					|| Tools.isStringNullOrEmpty(req.getParameter("field-username"))
        					|| Tools.isStringNullOrEmpty(req.getParameter("field-password"))
        					|| Tools.isStringNullOrEmpty(req.getParameter("field-type"))){
        				
        				errorMessage = "Preencha todos os campos. ";
        				//errorMessage = "Preencha todos os campos";
        				//RequestDispatcher dispatcher = req.getRequestDispatcher("register-user.jsp");
        				//dispatcher.forward(req, resp);
        			}
        			
        			// username disponível
        			if(errorMessage.isBlank()) {
        				try {
        					user = repository.find(req.getParameter("field-username"));
        					if(user != null) {
        						errorMessage += "O nome de usuário já existe. ";
        						System.out.println(errorMessage
        								+ "Id = " + user.getId()
        								+ ", username = " + user.getUsername());
        					}
        				} catch (Exception e) {
        					System.out.println(e.getMessage());
        				}
        			}
        			
        	        if (errorMessage.isBlank() && user == null)
        	        {
        	        	if(req.getParameter("field-id") != null) {
        	        		user = repository.find(Integer.parseInt(req.getParameter("field-id")));
        	        	}
        	        	
        	        	if(user != null) {
        	        		errorMessage += "O usuário já está cadastrado.";
        	        	} else if (errorMessage.isBlank()){
        	            user = new User();
        	            
        				user.setName(req.getParameter("field-name"));
        				user.setUsername(req.getParameter("field-username"));
        				user.setPassword(req.getParameter("field-password"));
        				user.setType(Integer.valueOf(req.getParameter("field-type")));

        	            repository.insert(user);

        	            RequestDispatcher dispatcher = req.getRequestDispatcher("/users");
        				dispatcher.forward(req, resp);
        	        	}
        	        }
        		} catch (Exception e) {
        			System.out.println(e.getMessage());
        			errorMessage += "Erro ao cadastrar usuário. ";
        		}
        		
        		req.setAttribute("errorMessage", errorMessage);
            	RequestDispatcher dispatcher = req.getRequestDispatcher("./register-user.jsp");
                dispatcher.forward(req, resp);
        	} else {
        		errorMessage += "Ops! Usuário sem permissão. ";
        	}
        } catch (Exception e){
        	System.out.println(e.getMessage());
        	errorMessage = "Ops! Usuário sem permissão. ";
        }
        
        req.setAttribute("errorMessage", errorMessage);
    	RequestDispatcher dispatcher = req.getRequestDispatcher("blib.jsp");
        dispatcher.forward(req, resp);
	}

}
